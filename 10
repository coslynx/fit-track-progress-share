const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const dotenv = require('dotenv');

dotenv.config();

const authRoutes = require('./routes/authRoutes');
const goalRoutes = require('./routes/goalRoutes');
const trackingRoutes = require('./routes/trackingRoutes');
const socialRoutes = require('./routes/socialRoutes');
const authMiddleware = require('./middleware/authMiddleware');
const errorMiddleware = require('./middleware/errorMiddleware');

const app = express();
const PORT = process.env.PORT || 5000;


const corsOptions = {
    origin: '*',
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    credentials: true,
    optionsSuccessStatus: 204,
};
app.use(cors(corsOptions));


app.use(express.json());


mongoose.connect(process.env.MONGODB_URI)
    .then(() => {
        console.log('Connected to MongoDB');
        
        app.get('/health', (req, res) => {
          res.json({ status: 'ok' });
        });
        
        app.use('/api/auth', authRoutes);
        
        app.use('/api/goals', authMiddleware, goalRoutes);
        app.use('/api/tracking', authMiddleware, trackingRoutes);
        app.use('/api/social', authMiddleware, socialRoutes);


        app.use(errorMiddleware);

        app.use((req, res) => {
            res.status(404).json({ message: 'Route Not Found' });
        });


        app.listen(PORT, () => {
           console.log(Server listening on port ${PORT});
         });
    })
    .catch((err) => {
        console.error('MongoDB connection error:', err);
        process.exit(1);
    });

module.exports = app;