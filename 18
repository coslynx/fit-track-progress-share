import express, { Express, Request, Response, NextFunction } from 'express';
import cors from 'cors';
import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { authRoutes } from './routes/authRoutes';
import { goalRoutes } from './routes/goalRoutes';
import { trackingRoutes } from './routes/trackingRoutes';
import { socialRoutes } from './routes/socialRoutes';
import { errorMiddleware } from './middleware/errorMiddleware';


dotenv.config({ path: '../../.env' });


const app: Express = express();
const port = process.env.PORT || 5000;

const dbConnectionString = process.env.MONGODB_URI || 'mongodb://localhost:27017/fitnessApp';

async function connectDB(): Promise<void> {
    try {
      await mongoose.connect(dbConnectionString);
      console.log('MongoDB connected successfully');
    } catch (error: any) {
      console.error('MongoDB connection error:', error.message);
      process.exit(1)
    }
  }

connectDB();

app.use(cors({
  origin: '*'
}));
app.use(express.json());


app.use('/api/auth', authRoutes);
app.use('/api/goals', goalRoutes);
app.use('/api/tracking', trackingRoutes);
app.use('/api/social', socialRoutes);


app.use(errorMiddleware);

app.get('/', (req: Request, res: Response) => {
    res.send('Fitness tracker API is up and running!');
});

const server = app.listen(port, () => {
  console.log(Server is running on port ${port});
});

export { app, server };